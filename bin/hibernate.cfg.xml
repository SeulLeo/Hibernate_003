<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE hibernate-configuration PUBLIC
          "-//Hibernate/Hibernate Configuration DTD 3.0//EN"
          "http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd">

<!-- Generated by MyEclipse Hibernate Tools.                   -->
<hibernate-configuration>

	<session-factory>
	<!-- property 用于配置Hibernate的属性
	键：值
	 -->
	 <!-- 数据库方言配置 ，针对于mysql的配置 org.hibernate.dialect.MySQLDialect
	 #hibernate.dialect org.hibernate.dialect.MySQLDialect
     #hibernate.dialect org.hibernate.dialect.MySQLInnoDBDialect
     #hibernate.dialect org.hibernate.dialect.MySQLMyISAMDialect
	 -->
		<property name="dialect">
			org.hibernate.dialect.MySQL5InnoDBDialect
		</property>
		<!-- 连接数据库的路径、地址 -->
		<property name="connection.url">
			jdbc:mysql://localhost:3306/student
		</property>
		<!-- 打印sql -->
		<property name="show_sql">true</property>
		<!-- 打印sql，先将sql格式化  -->
		<property name="format_sql">true</property>
		<!-- 自动生成表结构,如果数据库中没有表，会自动生成一个新的表结构 生成表结构的策略
		# hibernate.hbm2ddl.auto update(最常用取值):如果当前数据库不存在表的结构，那么自动创建表结构
		如果存在表结构，并且表结构与实体一致，那么不做修改
		如果存在表结构，并且表结构与实体不一致，那么会修改表结构，会保留原有列，例如设置了Student.hbm.xml中的property属性为name2列
		它在数据库中会自动生成一个name2的列
		
		# hibernate.hbm2ddl.auto create(使用很少)
		无论是否存在表结构，每次启动hibernate会自动生成表结构(数据会丢失)
		# hibernate.hbm2ddl.auto create-drop(使用极少)
		无论是否存在表结构，每次hibernate运行结束时删除表结构
		# hibernate.hbm2ddl.auto validate(使用很少)
		不会自动创建表结构，也不会自动维护表结构，只负责校验表结构，表结构不一致时，抛出异常
		-->
		<property name="hbm2ddl.auto">update</property>
		<!-- 连接数据库的用户名  -->
		<property name="connection.username">root</property>
		<!-- 连接数据库的密码 -->
		<property name="connection.password">123</property>
		<!-- 连接数据库的驱动包 -->
		<property name="connection.driver_class">
			com.mysql.jdbc.Driver
		</property>
		<!-- 设置Hibernate自动提交 -->
		<property name="hibernate.connection.auotcommit">true</property>
		<!-- 将Session与线程绑定=>只有配置了该配置，才能使用getCurrentSession -->
		<property name="hibernate.current_session_context_class">thread</property>
		<property name="myeclipse.connection.profile">mysql</property>
		
		<!-- 引入ORM映射文件，填写src之后的路径 -->
		<mapping resource="com/zk/Student/Student.hbm.xml" />

	</session-factory>

</hibernate-configuration>